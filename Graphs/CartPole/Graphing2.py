import matplotlib
import matplotlib.pyplot as plt
matplotlib.rcParams['mathtext.fontset'] = 'stix'
matplotlib.rcParams['font.family'] = 'STIXGeneral'
matplotlib.pyplot.title(r'ABC123 vs $\mathrm{ABC123}^{123}$')

import numpy as np


'''
Graphing the Reward vs Time for QNPG, TRPO, and PPO on acrobot simulation
'''

average_timeT = np.array([0.061, 0.238, 0.412, 0.583, 0.751, 0.917, 1.083, 1.248, 1.413, 1.579, 1.746, 1.915,
                            2.086, 2.259, 2.435, 2.614, 2.79, 2.981, 3.169, 3.361, 3.556, 3.755, 3.957, 4.161,
                            4.369, 4.579, 4.792, 5.007, 5.223, 5.441, 5.659, 5.878, 6.096, 6.313, 6.529, 6.742,
                            6.952, 7.158, 7.36, 7.555, 7.744, 7.925, 8.098, 8.26, 8.412, 8.551, 8.677, 8.788,
                            8.883, 8.961]) * 1.2
tdevT = np.array([0.319, 0.18, 0.097, 0.101, 0.145, 0.184, 0.213, 0.234, 0.254, 0.277, 0.309, 0.352,
                  0.405, 0.468, 0.539, 0.615, 0.695, 0.775, 0.856, 0.936, 1.013, 1.086, 1.156, 1.221,
                  1.281, 1.335, 1.384, 1.428, 1.467, 1.5, 1.529, 1.553, 1.574, 1.591, 1.607, 1.62,
                  1.633, 1.645, 1.658, 1.672, 1.688, 1.707, 1.731, 1.76, 1.796, 1.841, 1.897, 1.968,
                  2.058, 2.17])

average_timeQ = np.array([0.0263132, 0.01823489, 0.02280531, 0.03999198, 0.06973663, 0.11195514,
                            0.16653758, 0.23334821, 0.31222548, 0.40298202, 0.50540463, 0.61925432,
                            0.74426626, 0.88014982, 1.02658854, 1.18324016, 1.34973659, 1.52568393,
                            1.71066248, 1.90422668, 2.10590521, 2.31520089, 2.53159075, 2.75452598,
                            2.98343198, 3.21770832, 3.45672876, 3.69984124, 3.94636788, 4.19560499,
                            4.44682306, 4.69926678, 4.95215499, 5.20468076, 5.4560113, 5.70528802,
                            5.95162654, 6.19411662, 6.43182223, 6.66378153, 6.88900684, 7.10648468,
                            7.31517576, 7.51401495, 7.70191134, 7.87774817, 8.04038288, 8.18864709,
                            8.32134661, 8.43726142])
tdevQ = np.array([0.18618904, 0.09650047, 0.02084302, 0.04907616, 0.10396336, 0.14924297,
                  0.18542941, 0.2134131, 0.23425926, 0.24922952, 0.25983128, 0.26786461,
                  0.27543282, 0.28486522, 0.29850513, 0.31837967, 0.34587651, 0.38159567,
                  0.4254364, 0.47682602, 0.53495386, 0.59893542, 0.66790085, 0.74103099,
                  0.81756519, 0.89679664, 0.97806339, 1.06073907, 1.14422468, 1.22794166,
                  1.31132647, 1.39382622, 1.47489521, 1.55399223, 1.63057841, 1.70411547,
                  1.77406437, 1.83988419, 1.90103125, 1.95695843, 2.0071147, 2.05094477,
                  2.08788894, 2.11738322, 2.13885958, 2.15174662, 2.15547062, 2.14945712,
                  2.13313333, 2.10593173]) / 2

average_timeP = np.array([ 0.31690591,  0.47898181,  0.64951532,  0.82814556,  1.01451301,
        1.20825947,  1.40902812,  1.61646348,  1.8302114 ,  2.0499191 ,
        2.27523514,  2.50580943,  2.74129323,  2.98133916,  3.22560116,
        3.47373455,  3.72539598,  3.98024345,  4.23793632,  4.49813529,
        4.76050241,  5.02470107,  5.29039604,  5.55725339,  5.82494059,
        6.09312642,  6.36148103,  6.62967591,  6.8973839 ,  7.16427919,
        7.43003733,  7.69433519,  7.95685102,  8.2172644 ,  8.47525627,
        8.7305089 ,  8.98270594,  9.23153235,  9.47667448,  9.71782   ,
        9.95465794, 10.18687867, 10.41417392, 10.63623677, 10.85276163,
       11.06344428, 11.26798183, 11.46607277, 11.65741689, 11.84171539])
tdevP = np.array([0.32946692, 0.20453809, 0.18721749, 0.23395786, 0.28367791,
       0.3187356 , 0.33827875, 0.34652583, 0.35006416, 0.3568187 ,
       0.37453872, 0.40850426, 0.45998467, 0.5268542 , 0.60542649,
       0.69188188, 0.78287466, 0.87565305, 0.9680066 , 1.05818312,
       1.14481831, 1.22688435, 1.30365375, 1.37467334, 1.43974402,
       1.49890269, 1.55240363, 1.60069689, 1.64440148, 1.68427172,
       1.72115549, 1.755944  , 1.78951403, 1.82266503, 1.85605526,
       1.89014239, 1.92513509, 1.96096156, 1.99726041, 2.03339736,
       2.06851025, 2.10158401, 2.13155825, 2.15747271, 2.17865993,
       2.19499957, 2.20725335, 2.21749949, 2.22967113, 2.25015834]) / 2


iter = np.arange(200, step=4)

plt.plot(iter, average_timeQ, '-', c='purple', label='LFA-NPG')
plt.plot(iter, average_timeT, ':', c='red', label='TRPO')
plt.plot(iter, average_timeP, '--', c='orange', label='PPO')
plt.fill_between(iter, average_timeT - tdevT, average_timeT + tdevT, alpha=0.2, color='red')
plt.fill_between(iter, average_timeQ - tdevQ, average_timeQ + tdevQ, alpha=0.2, color='purple')
plt.fill_between(iter, average_timeP - tdevQ, average_timeP + tdevP, alpha=0.2, color='orange')
plt.legend(loc='upper left')
plt.rcParams["font.family"] = "serif"
plt.grid()
plt.title('Time over Reward', fontsize=25)
plt.xlabel('Reward', fontsize=20)
plt.ylabel('Time',fontsize=20)

plt.show()
