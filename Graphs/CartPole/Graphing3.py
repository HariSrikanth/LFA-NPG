import matplotlib
import matplotlib.pyplot as plt
matplotlib.rcParams['mathtext.fontset'] = 'stix'
matplotlib.rcParams['font.family'] = 'STIXGeneral'
matplotlib.pyplot.title(r'ABC123 vs $\mathrm{ABC123}^{123}$')

import numpy as np

'''
Graphing Iterations vs Reward for QNPG, noise at 0, 10, 15, and 20% deviation; Cart pole simulation
'''

a = np.array([0., 33.82, 45.36, 57.96, 73.18, 74.62, 84.24, 94.16, 109.84, 125.86,
              141.18, 152.36, 164.68, 164.02, 171.32, 179.68, 177.3, 176.12, 182.06, 182.1,
              188.28, 186.08, 184.98, 185.6, 183.84, 184.52])
adev = np.array([0.54411411, 7.15474668, 11.0882821, 12.44186481, 9.90610418, 11.05348814,
                 12.69373468, 13.73362661, 18.86911763, 20.48166009, 22.64182192, 22.85899385,
                 22.69339111, 20.89388427, 19.89307417, 17.74926477, 19.41159705, 18.48286774,
                 17.05092666, 16.71683283, 17.60795275, 16.58850204, 17.40079309, 17.52940387,
                 17.12182525, 17.48348935]) / 2

b = np.array([  0.  ,  37.5 ,  40.  ,  49.9 ,  63.15,  71.8 ,  80.4 ,  93.3 ,
       104.45, 138.85, 128.65, 151.7 , 157.2 , 166.2 , 172.65, 176.1 ,
       179.95, 186.  , 181.2 , 186.45, 183.2 , 184.65, 190.  , 178.65,
       185.6 , 189.65])
bdev = np.array([ 0.12339605, 10.73717258,  8.03601269, 13.15434814, 13.68052905,
       13.85469235, 16.93581634, 16.98490138, 23.28533605, 25.85918599,
       22.52658152, 27.04508967, 26.87995303, 26.34226642, 24.81092249,
       24.87664567, 23.35053533, 23.90031381, 24.68582589, 23.7335601 ,
       23.14929805, 22.7789788 , 22.24129043, 24.06827528, 22.98173188,
       22.73620461]) / 2

c = np.array([0., 39.68, 50.82, 58.06, 71.58, 78.44, 86., 97.,
              107.16, 127.18, 138.48, 147.58, 163.62, 175.92, 178.38, 180.9,
              181.44, 183.16, 185.22, 185.38, 183.4, 189.08, 183.4, 187.5,
              179.66, 185.78])
cdev = np.array([103.37006998, 9.75012308, 12.35355819, 12.05489112,
                 12.35919091, 10.48494635, 11.3245044, 14.36906399,
                 14.70102037, 20.59335815, 19.89415995, 20.86482447,
                 19.45479118, 18.45124386, 18.94149941, 18.66607886,
                 18.10280641, 19.17843841, 17.49351023, 17.63090752,
                 18.12153415, 16.5479183, 17.45339222, 17.20002616,
                 17.83733164, 17.94470674]) / 2

d = np.array([  0.  ,  36.1 ,  44.7 ,  56.35,  59.15,  65.1 ,  68.8 ,  91.8 ,
        86.4 ,  78.95, 105.7 , 102.35, 110.4 , 131.35, 115.3 , 141.  ,
       147.4 , 145.6 , 164.65, 128.35, 158.2 , 163.1 , 145.4 , 149.  ,
       146.6 , 160.9 ])
ddev = np.array([ 0.16498869, 11.69666085, 12.60247991, 19.71553956, 16.48256655,
       22.99782598, 19.35419851, 28.69079774, 15.93612249, 20.57989006,
       29.19986087, 24.7604902 , 30.97631151, 30.36127262, 30.68642819,
       32.85331034, 28.07190544, 31.51523441, 25.05493963, 29.2400731 ,
       32.19068188, 27.19402508, 33.29624603, 30.9334366 , 25.54701548,
       26.41680336]) / 2

e = np.array([  0.  ,  46.35,  57.5 ,  46.7 ,  59.45,  86.65,  42.3 ,  62.25,
        57.6 ,  53.5 ,  92.45,  70.15,  84.45,  89.5 , 117.95, 100.05,
        98.45, 122.5 , 127.25, 114.7 , 108.45, 130.25, 124.55, 128.3 ,
       134.7 , 162.15])
edev = np.array([ 0.21807117, 20.83523158, 23.7933289 , 17.31588866, 23.05883779,
       32.58523439, 16.96133471, 26.42691573, 21.87269988, 24.1941496 ,
       32.63834976, 21.51527074, 28.28643668, 25.68555041, 32.90572709,
       26.63475174, 27.4004562 , 31.60874088, 32.31485726, 29.32186684,
       32.779338  , 32.60191712, 31.31831533, 34.73107398, 27.71330908,
       29.64788146]) / 2

iter = np.arange(26)

plt.plot(iter, a, '-', c='blue', label='Noise=0')
#plt.plot(iter, b, '-', c='green', label='Noise=5')
plt.plot(iter, c, '--', c='green', label='Noise=10')
plt.plot(iter, d, '-.', c='orange', label='Noise=15')
plt.plot(iter, e, ':', c='red', label='Noise=20')
plt.fill_between(iter, a - adev, a + adev, alpha=0.2, color='blue')
#plt.fill_between(iter, b - bdev, b + bdev, alpha=0.2, color='green')
plt.fill_between(iter, c - cdev, c + cdev, alpha=0.2, color='green')
plt.fill_between(iter, d - ddev, d + ddev, alpha=0.2, color='orange')
plt.fill_between(iter, e - edev, e + edev, alpha=0.2, color='red')
plt.legend(loc='lower right')
plt.rcParams["font.family"] = "serif"
plt.grid()
plt.title('Average Reward of LFA-NPG Over Policy iterations', fontsize=20)
plt.xlabel('Number of Policy Iterations', fontsize=20)
plt.ylabel('Average Reward', fontsize=20)
plt.ylim(0, 200)

plt.show()
