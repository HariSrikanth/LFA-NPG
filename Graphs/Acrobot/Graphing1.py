import matplotlib
import matplotlib.pyplot as plt
matplotlib.rcParams['mathtext.fontset'] = 'stix'
matplotlib.rcParams['font.family'] = 'STIXGeneral'
matplotlib.pyplot.title(r'ABC123 vs $\mathrm{ABC123}^{123}$')

import numpy as np


'''
Graphing the iterations vs Reward for QNPG, TRPO, and PPO on the Cartpole Sim
'''

average_rewardT = np.array([-500., -500., -500., -493.2, -471.133, -500.,
                            -500., -429.567, -458.367, -438.133, -454.533, -429.367,
                            -425.35, -443.15, -448.85, -467.167, -441.917, -428.,
                            -398.26, -422.533, -440.18, -407.8, -434.82, -435.533,
                            -414.067, -440.32, -426.333, -430.05, -420.413, -403.517,
                            -434.15, -413.483, -399.52, -399.74, -371.35, -417.317,
                            -417.183, -427.967, -394.157, -383.05, -358.333, -399.283,
                            -431.2, -398.333, -375.55, -393.6, -374.283, -353.8,
                            -342.283, -323.917, -341.667, -307.66, -357.4, -337.3,
                            -321.05, -308.78, -368.747, -331.947, -322.183, -282.613,
                            -280.157])
rewarddevT = np.array([100., 0., 0., 4.309, 28.867, 0., 0.,
                       34.065, 17.365, 39.908, 29.381, 42.724, 46.863, 56.85,
                       51.15, 21.06, 45.419, 51.071, 55.264, 52.886, 56.821,
                       64.713, 62.08, 61.767, 63.716, 58.192, 46., 53.05,
                       52.32, 50.492, 51.529, 49.66, 57.88, 56.36, 53.55,
                       55.15, 44.75, 26.7, 46.05, 56.112, 51.335, 31.526,
                       19.21, 33.313, 37.28, 36.835, 39.04, 47.274, 43.528,
                       39.262, 33.51, 47.235, 44.864, 34.283, 43.467, 51.897,
                       51.94, 49.142, 37.986, 53.616, 60.56]) / 2

average_rewardQ = np.array([-500. , -500. , -500. , -500. , -500. , -500. , -500. , -483.8,
       -438.6, -468. , -422.4, -491.6, -313. , -364. , -490.6, -253.8,
       -350.6, -326.4, -175.6, -357.8, -337.8, -162.8, -209.4, -261.8,
       -191.2, -245.4, -215.4, -171.4, -159.8, -140.8, -179. , -194.2,
       -207.6, -195.6, -159.4, -174.4, -144.4, -252.6, -168.6, -204.8,
       -183. , -179. , -147. , -146. , -181.8, -191.4, -155.8, -153.2,
       -175.8, -149.4, -128.8, -156.6, -255.8, -205.6, -168.4, -148.6,
       -212.6, -151.2, -172.8, -183.8, -191.2])
rewarddevQ = np.array([100.22101319,   0.        ,   0.        ,   0.        ,
         0.        ,   0.        ,   0.        ,   0.        ,
        61.4       ,  22.20135131,  52.15898772,   8.4       ,
        58.8226147 ,  54.04387107,   9.4       ,  63.98312277,
        37.93889824,  67.23510988,  65.64190735,  67.75426186,
        53.86315995,  66.91980275,  75.43845173,  71.54550999,
        68.37470292,  57.54771933,  69.87088092,  70.83106663,
        69.12119791,  72.98054535,  70.37087466,  92.1289314 ,
        57.4273454 ,  61.12397238,  70.46204652,  68.54166616,
        71.41330408,  74.56044528,  71.28155442,  70.58753431,
        70.70318239,  68.64153262,  74.0152687 ,  72.37858799,
        64.70672299,  64.55803591,  70.83741949,  72.57575353,
        64.02999297,  69.49863308,  75.05904343,  69.2470938 ,
        75.44905566,  64.09882994,  68.84228352,  71.85429702,
        67.1173599 ,  72.32606722,  66.56831078,  72.35025916,
        66.68088182]) / 2
iter = np.arange(61)

average_rewardP = np.array([-500., -500., -500., -500.,
                            -439.8, -470.6, -500., -466.8,
                            -462.4, -460.6, -443.2, -448.6,
                            -449., -434.2, -491.4, -441.8,
                            -459.6, -421., -462., -403.9,
                            -435.4, -369.6, -378.8, -346.3,
                            -368.4, -323.9, -366., -421.3,
                            -364.7, -319.5, -295.3, -285.2,
                            -312.4, -315.2, -299.16666667, -292.,
                            -348., -312.56666667, -356.9, -317.6,
                            -274.7, -274.66666667, -273.8, -307.5,
                            -279., -277.4, -278.3, -303.16666667,
                            -269.9, -292.86666667, -270., -339.2,
                            -340.66666667, -267.4, -269.03333333, -263.3,
                            -283.3, -277.3, -264.6, -276.23333333,
                            -284.6])
rewarddevP = np.array([100., 0., 0., 0.,
                       32.6, 0., 0., 0.,
                       0., 0., 0., 0.,
                       13.8, 34.8, 8.6, 33.8,
                       0., 24.8, 0., 28.,
                       41.77989947, 46.56006873, 53.8, 61.89943457,
                       56.4, 69.11215523, 68.4, 10.,
                       61.6, 71.35502785, 80.27552554, 87.18451697,
                       73.43166892, 74.2223686, 76.89954486, 81.02690911,
                       74.1, 76.99064878, 63.6, 68.21466118,
                       91.43981627, 89.73159979, 91.93834891, 73.1389773,
                       88.60047655, 87.77192034, 87.47891174, 75.21276487,
                       92.3953462, 79.63391237, 91.85600144, 80.1,
                       80.06666667, 92.77472716, 93.44169305, 97.17901008,
                       85.23561462, 88.34228885, 93.35984147, 88.41357362,
                       86.29565458]) / 2

plt.plot(iter, average_rewardQ, '-', c='purple', label='LFA-NPG')
plt.plot(iter, average_rewardT, ':', c='red', label='TRPO')
plt.plot(iter, average_rewardP, '--', c='orange', label='PPO')
plt.fill_between(iter, average_rewardT - rewarddevT, average_rewardT + rewarddevT, alpha=0.2, color='red')
plt.fill_between(iter, average_rewardQ - rewarddevQ, average_rewardQ + rewarddevQ, alpha=0.2, color='purple')
plt.fill_between(iter, average_rewardP - rewarddevP, average_rewardP + rewarddevP, alpha=0.2, color='orange')
plt.legend(loc='lower right')
plt.rcParams["font.family"] = "serif"
plt.grid()
plt.title('Average Reward Over Policy iterations', fontsize=2)
plt.xlabel('Number of Policy Iterations', fontsize=20)
plt.ylabel('Average Reward', fontsize=20)

plt.ylim(-500, 0)

plt.show()
