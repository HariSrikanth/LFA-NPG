import matplotlib
import matplotlib.pyplot as plt
matplotlib.rcParams['mathtext.fontset'] = 'stix'
matplotlib.rcParams['font.family'] = 'STIXGeneral'
matplotlib.pyplot.title(r'ABC123 vs $\mathrm{ABC123}^{123}$')

import numpy as np


'''
Graphing Iterations vs Reward for TRPO, noise at 0, 10, 15, and 20% deviation; Acrobot simulation
'''

a = np.array([-500.        , -350.        , -500.        , -350.        ,
       -446.66666667, -351.33333333, -385.        , -311.        ,
       -369.        , -356.        , -314.        , -273.66666667,
       -362.        , -355.66666667, -285.66666667, -260.83333333,
       -287.33333333, -283.66666667, -332.66666667, -336.        ,
       -233.66666667, -226.33333333, -292.5       , -294.        ,
       -255.16666667, -321.66666667, -233.66666667, -238.        ,
       -358.        , -253.16666667, -222.5       , -177.66666667,
       -172.16666667, -169.66666667, -170.        , -224.83333333,
       -200.        , -248.33333333, -194.11111111, -176.27777778,
       -201.83333333, -181.66666667, -205.44444444, -155.66666667,
       -141.66666667, -165.16666667, -148.83333333, -133.        ,
       -148.33333333, -155.33333333, -128.77777778, -154.83333333,
       -227.16666667, -189.05555556, -153.5       , -130.94444444,
       -167.        , -184.16666667, -150.33333333, -184.22222222,
       -247.83333333])
adev = np.array([117.8511302 ,  35.35533906,   0.        ,  35.35533906,
        37.71236166,  34.89348873,  54.91862667,  52.51243239,
        35.35533906,  31.01612484,  72.36059394,  53.47429289,
        62.22539674,  53.47429289,  75.66042559,  57.90185662,
        73.65950191,  59.65223289,  72.11256633,  75.42472333,
        64.60531884,  71.04732382,  81.1374862 ,  41.0494282 ,
        78.77217501,  60.62773476,  64.34671709,  75.94735018,
        56.4092191 ,  49.2190399 ,  81.51235421,  81.69489308,
        84.4425347 ,  86.86004068,  86.41887654,  83.26171923,
        78.67761223,  81.47017177,  88.30673953,  85.89739609,
        80.17870665,  86.91470915,  82.57884373,  85.83220064,
        89.49705147,  91.56972146,  88.3912546 ,  89.72829357,
        90.1008694 ,  88.94317787,  89.88514619,  92.01230292,
        91.20101425,  92.36537584,  89.35097774,  91.62257357,
        89.49518919,  75.26647107,  86.51814196,  94.2430205 ,
        89.25252875]) / 2



c = np.array([-500.        , -350.        , -500.        , -350.        ,
       -450.33333333, -345.66666667, -360.66666667, -357.        ,
       -382.66666667, -403.66666667, -357.33333333, -351.16666667,
       -347.        , -334.        , -351.        , -282.        ,
       -314.66666667, -232.33333333, -265.        , -222.33333333,
       -274.66666667, -194.11111111, -259.        , -193.66666667,
       -246.83333333, -195.        , -236.44444444, -185.44444444,
       -239.83333333, -186.33333333, -256.61111111, -171.55555556,
       -236.55555556, -174.5       , -255.83333333, -175.55555556,
       -232.        , -185.11111111, -226.44444444, -190.05555556,
       -234.05555556, -183.88888889, -233.33333333, -289.66666667,
       -203.5       , -226.44444444, -183.66666667, -221.5       ,
       -201.91666667, -232.55555556, -170.08333333, -228.5       ,
       -175.88888889, -222.        , -174.27777778, -249.83333333,
       -175.77777778, -222.88888889, -187.83333333, -257.72222222,
       -173.66666667])
cdev = np.array([117.8511302 ,  35.35533906,   0.        ,  35.35533906,
         0.        ,  48.57697214,  35.35533906,  33.15870926,
        35.35533906,  35.35533906,  35.35533906,  35.35533906,
        35.35533906,  31.71049598,  31.81980515,  37.65634077,
        57.03994702,  71.26008701,  81.5529821 ,  71.89923504,
        91.09892364,  76.19091518,  83.79215357,  82.16759634,
        85.79562278,  78.68052491,  92.23815123,  85.93562765,
        93.45594625,  81.94891702,  76.01397898,  85.78882341,
        94.8308761 ,  84.68897344,  91.45247703,  83.95692605,
        96.04867111,  81.62107571,  94.90944352,  85.01870709,
        94.16305303,  78.64433927,  95.2237132 ,  57.51135154,
        71.89923504,  99.46635389,  81.03878054,  96.75577789,
        86.94588435,  94.75230868,  87.05619593,  96.75577789,
        84.54248694,  98.20927516,  85.71543503,  95.45941546,
        85.1286608 , 100.09489325,  77.81289882,  97.1878987 ,
        85.86222096]) / 2

d = np.array([-500.        , -437.5       , -625.        , -437.5       ,
       -616.25      , -422.5       , -586.75      , -465.75      ,
       -561.5       , -375.        , -467.25      , -362.75      ,
       -469.375     , -347.625     , -460.75      , -336.875     ,
       -376.75      , -310.875     , -383.5       , -339.        ,
       -340.        , -275.375     , -304.625     , -249.875     ,
       -321.375     , -267.625     , -294.875     , -273.58333333,
       -299.875     , -231.83333333, -270.08333333, -211.91666667,
       -279.        , -256.83333333, -239.91666667, -225.625     ,
       -256.83333333, -210.625     , -245.        , -233.16666667,
       -275.5       , -222.04166667, -256.875     , -243.625     ,
       -212.91666667, -248.        , -215.29166667, -252.875     ,
       -193.625     , -245.95833333, -188.45833333, -235.        ,
       -233.        , -321.58333333, -205.        , -236.33333333,
       -241.5       , -241.20833333, -206.5       , -247.625     ,
       -194.4375    ])
ddev = np.array([100.        ,  30.        ,   0.        ,  30.        ,
         4.75394573,  34.98571137,  29.85565273,  32.7377458 ,
        50.8       ,  51.18495873,  71.67593738,  56.55121573,
        76.43526673,  64.16665801,  80.67812591,  64.88327982,
        84.88250703,  62.5079195 ,  83.9609433 ,  69.78710483,
        83.9147782 ,  76.34913228,  84.8810344 ,  71.87829992,
        86.34112577,  73.66885366,  89.75722812,  75.08269515,
        89.25505588,  75.59301849,  89.88680536,  78.07662903,
        89.22536074,  72.77694995,  94.45812711,  76.29678892,
        89.38634   ,  77.86404819,  93.84155677,  77.50516829,
        90.98379587,  79.22817961,  91.74671656,  92.55938634,
        80.55746051,  93.44687142,  78.09827143,  91.1712674 ,
        80.78300839,  92.43208317,  82.4008158 ,  95.73197538,
        74.10661239,  89.7662025 ,  80.22929639,  96.42489305,
        81.23762128,  79.51415667,  80.041517  ,  93.24103174,
        81.21944041]) / 2

e = np.array([-500.        , -437.5       , -586.5       , -437.5       ,
       -507.125     , -374.5       , -479.5       , -474.125     ,
       -405.        , -407.5       , -297.        , -337.25      ,
       -400.25      , -430.25      , -384.5       , -359.91666667,
       -313.        , -353.875     , -284.75      , -288.25      ,
       -264.33333333, -318.58333333, -222.95833333, -298.66666667,
       -274.79166667, -267.625     , -224.08333333, -274.5       ,
       -238.875     , -254.91666667, -206.16666667, -313.33333333,
       -236.16666667, -235.35416667, -192.08333333, -229.8125    ,
       -240.04166667, -240.375     , -184.33333333, -232.29166667,
       -192.125     , -281.75      , -226.58333333, -211.375     ,
       -234.70833333, -208.16666667, -238.33333333, -192.79166667,
       -245.70833333, -190.25      , -237.25      , -192.58333333,
       -223.04166667, -201.        , -233.41666667, -185.75      ,
       -233.75      , -192.        , -257.625     , -189.58333333,
       -247.70833333])
edev = np.array([100.        ,  30.        ,  30.8       ,  30.        ,
        46.9095939 ,  46.71038428,  35.42541461,  51.45570911,
        65.59039564,  73.73804988,  68.96201853,  87.23382372,
        42.84903733,  70.46871646,  74.46650254,  87.68734864,
        71.22822474,  89.21020121,  76.8400937 ,  92.12125162,
        80.1930033 ,  95.45266424,  80.17990882,  88.4937537 ,
        71.55991274,  97.48615286,  82.90065004,  90.72408721,
        78.84009132,  96.53775312,  83.75527512,  90.40953735,
        79.03660193,  97.59164639,  85.11488968, 102.00240193,
        80.15799676,  98.76418885,  87.04731153,  98.24917868,
        85.69072295,  90.88660517, 100.68176487,  83.43603005,
        99.58700272,  81.50196998,  98.0580412 ,  86.64981246,
        95.86623203,  86.54386171,  98.09510691,  85.34824089,
       101.2971646 ,  83.00323956,  98.82884194,  85.83708082,
       100.30682928,  83.64603995, 100.57653802,  86.75578751,
        95.23987844]) / 2

iter = np.arange(61)

plt.plot(iter, a, '-', c='blue', label='Noise=0')
#plt.plot(iter, b, '-', c='green', label='Noise=5')
plt.plot(iter, c, '--', c='green', label='Noise=10')
plt.plot(iter, d, '-.', c='orange', label='Noise=15')
plt.plot(iter, e, ':', c='red', label='Noise=20')
plt.fill_between(iter, a - adev, a + adev, alpha=0.2, color='blue')
#plt.fill_between(iter, b - bdev, b + bdev, alpha=0.2, color='green')
plt.fill_between(iter, c - cdev, c + cdev, alpha=0.2, color='green')
plt.fill_between(iter, d - ddev, d + ddev, alpha=0.2, color='orange')
plt.fill_between(iter, e - edev, e + edev, alpha=0.2, color='red')
plt.legend(loc='lower right')
plt.rcParams["font.family"] = "serif"
plt.grid()
plt.title('Average Reward of PPO Over Policy iterations', fontsize=23)
plt.xlabel('Number of Policy Iterations', fontsize=20)
plt.ylabel('Average Reward', fontsize=20)
plt.ylim(-500, 0)

plt.show()
