import matplotlib
import matplotlib.pyplot as plt
matplotlib.rcParams['mathtext.fontset'] = 'stix'
matplotlib.rcParams['font.family'] = 'STIXGeneral'
matplotlib.pyplot.title(r'ABC123 vs $\mathrm{ABC123}^{123}$')

import numpy as np


'''
Graphing the Reward vs Time for QNPG, TRPO, and PPO on cart pole simulation
'''

average_timeT = np.array([13.233, 14.262, 15.232, 16.145, 17.005, 17.813, 18.573, 19.286,
                          19.956, 20.584, 21.174, 21.728, 22.247, 22.734, 23.191, 23.621,
                          24.024, 24.404, 24.762, 25.1, 25.42, 25.723, 26.011, 26.286,
                          26.549, 26.803, 27.047, 27.284, 27.515, 27.741, 27.964, 28.184,
                          28.403, 28.621, 28.84, 29.061, 29.285, 29.511, 29.741, 29.977,
                          30.217, 30.463, 30.716, 30.975, 31.242, 31.516, 31.798, 32.088,
                          32.386, 32.692, 33.007, 33.33, 33.661, 34.001, 34.348, 34.703,
                          35.065, 35.434, 35.81, 36.191, 36.578, 36.97, 37.367, 37.767,
                          38.169, 38.574, 38.979, 39.385, 39.789, 40.192, 40.591, 40.986,
                          41.376, 41.759, 42.133, 42.498, 42.852, 43.193, 43.519, 43.83,
                          44.123, 44.397, 44.65, 44.879, 45.084, 45.261, 45.409, 45.526,
                          45.61, 45.658, 45.668, 45.638, 45.565, 45.447, 45.281, 45.065,
                          44.796, 44.472, 44.089, 43.645])
tdevT = np.array([2.047, 2.702, 3.338, 3.924, 4.452, 4.919, 5.326, 5.677,
                  5.975, 6.222, 6.423, 6.582, 6.702, 6.786, 6.839, 6.863,
                  6.862, 6.84, 6.8, 6.745, 6.677, 6.6, 6.516, 6.427,
                  6.337, 6.247, 6.159, 6.075, 5.996, 5.924, 5.86, 5.805,
                  5.76, 5.724, 5.701, 5.688, 5.688, 5.702, 5.729, 5.77,
                  5.828, 5.902, 5.995, 6.108, 6.242, 6.4, 6.582, 6.582, 6.702, 6.786, 6.839, 6.863,
                  6.862, 6.84, 6.8, 6.745, 6.677, 6.6, 6.516, 6.427,
                  6.337, 6.247, 6.159, 6.075, 5.996, 5.924, 5.86, 5.805,
                  5.76, 5.724, 5.701, 5.688, 5.688, 5.702, 5.729, 5.77,
                  5.828, 5.902, 5.995, 6.108, 6.242, 6.4, 6.582, 6.582, 6.702, 6.786, 6.839, 6.863,
                  6.862, 6.84, 6.8, 6.745, 6.677, 6.6, 6.516, 6.427,
                  6.337, 6.247, 6.159, 6.075])

average_timeQ = np.array([ 5.74971249,  6.1958052 ,  6.61947101,  7.02178301,  7.40379086,
        7.76652071,  8.11097527,  8.43813375,  8.74895193,  9.04436209,
        9.32527306,  9.59257018,  9.84711536, 10.08974699, 10.32128004,
       10.54250598, 10.75419283, 10.95708511, 11.15190392, 11.33934685,
       11.52008804, 11.69477816, 11.8640444 , 12.02849051, 12.18869673,
       12.34521986, 12.49859323, 12.64932669, 12.79790663, 12.94479596,
       13.09043415, 13.23523716, 13.37959751, 13.52388424, 13.66844294,
       13.81359569, 13.95964116, 14.10685449, 14.2554874 , 14.40576811,
       14.55790138, 14.71206852, 14.86842735, 15.02711221, 15.18823401,
       15.35188017, 15.51811462, 15.68697786, 15.8584869 , 16.03263529,
       16.20939309, 16.38870692, 16.57049992, 16.75467176, 16.94109863,
       17.12963328, 17.32010496, 17.51231947, 17.70605914, 17.90108283,
       18.09712593, 18.29390035, 18.49109456, 18.68837352, 18.88537877,
       19.08172834, 19.27701681, 19.4708153 , 19.66267144, 19.8521094 ,
       20.03862988, 20.22171013, 20.4008039 , 20.5753415 , 20.74472975,
       20.908352  , 21.06556817, 21.21571465, 21.35810442, 21.49202694,
       21.61674825, 21.73151088, 21.83553392, 21.92801297, 22.00812019,
       22.07500423, 22.12779031, 22.16558016, 22.18745205, 22.19246077,
       22.17963766, 22.14799057, 22.0965039 , 22.02413858, 21.92983205,
       21.81249831, 21.67102786, 21.50428777, 21.31112161, 21.09034949])
tdevQ = np.array([1.06438325, 1.12303784, 1.19822083, 1.28276109, 1.3714885 ,
       1.46088133, 1.54862484, 1.63324433, 1.71383912, 1.78989994,
       1.86118578, 1.92764093, 1.98933861, 2.04644204, 2.09917717,
       2.14781321, 2.19264833, 2.23399913, 2.2721924 , 2.30755889,
       2.34042815, 2.37112438, 2.39996301, 2.42724771, 2.45326795,
       2.47829686, 2.50258947, 2.52638123, 2.54988683, 2.57329942,
       2.59678998, 2.62050711, 2.64457711, 2.66910425, 2.69417148,
       2.7198412 , 2.74615646, 2.77314215, 2.80080655, 2.82914283,
       2.85813076, 2.88773841, 2.91792385, 2.94863686, 2.97982062,
       3.01141322, 3.0433492 , 3.07556089, 3.1079797 , 3.14053717,
       3.17316604, 3.20580106, 3.2383797 , 3.27084274, 3.30313475,
       3.33520441, 3.36700467, 3.39849296, 3.42963107, 3.46038514,
       3.4907254 , 3.52062592, 3.55006423, 3.57902089, 3.60747896,
       3.63542346, 3.66284075, 3.68971778, 3.71604147, 3.74179786,
       3.76697139, 3.79154402, 3.81549447, 3.83879731, 3.86142216,
       3.88333283, 3.90448648, 3.92483283, 3.94431338, 3.9628606 ,
       3.98039729, 3.99683583, 4.01207759, 4.02601235, 4.03851776,
       4.04945886, 4.05868771, 4.06604299, 4.0713497 , 4.07441898,
       4.07504785, 4.07301913, 4.06810132, 4.06004859, 4.04860078,
       4.03348345, 4.01440794, 3.99107153, 3.96315754, 3.93033551]) / 2

average_timeP = np.array([ 8.9712,  9.5424, 10.083 , 10.593 , 11.0748, 11.529 , 11.9574,
       12.36  , 12.7392, 13.0956, 13.4298, 13.7436, 14.0382, 14.3136,
       14.5716, 14.8128, 15.0384, 15.249 , 15.4458, 15.6294, 15.801 ,
       15.9612, 16.1106, 16.2504, 16.3812, 16.503 , 16.6176, 16.725 ,
       16.8258, 16.9212, 17.0112, 17.097 , 17.1786, 17.256 , 17.331 ,
       17.4036, 17.4732, 17.5416, 17.6088, 17.6748, 17.7402, 17.8056,
       17.871 , 17.9364, 18.0024, 18.069 , 18.1368, 18.2058, 18.276 ,
       18.3474, 18.42  , 18.4944, 18.5706, 18.6486, 18.7278, 18.8088,
       18.891 , 18.975 , 19.0608, 19.1472, 19.2348, 19.3236, 19.413 ,
       19.5024, 19.5924, 19.683 , 19.7724, 19.8618, 19.95  , 20.0364,
       20.1216, 20.2044, 20.2842, 20.3616, 20.4348, 20.5044, 20.5692,
       20.6286, 20.682 , 20.7294, 20.7696, 20.802 , 20.826 , 20.8404,
       20.8452, 20.8398, 20.8224, 20.7924, 20.7498, 20.6928, 20.6214,
       20.5338, 20.4294, 20.3076, 20.1666, 20.0064, 19.8252, 19.6218,
       19.3962, 19.146 ])
tdevP = np.array([0.92383725, 0.85055173, 0.7925979 , 0.74938807, 0.7198051 ,
       0.70221342, 0.69459889, 0.69479118, 0.70068859, 0.71042204,
       0.72243816, 0.73551513, 0.74873752, 0.76145289, 0.77322495,
       0.78379062, 0.79302387, 0.80090645, 0.80750477, 0.81295153,
       0.81743122, 0.82116815, 0.8244163 , 0.8274504 , 0.83055753,
       0.83402908, 0.8381528 , 0.843205  , 0.84944293, 0.85709766,
       0.86636787, 0.87741471, 0.89035831, 0.905276  , 0.92220231,
       0.94113082, 0.96201734, 0.9847844 , 1.00932625, 1.0355144 ,
       1.06320287, 1.09223337, 1.12243973, 1.15365192, 1.18569931,
       1.21841328, 1.2516294 , 1.2851889 , 1.3189399 , 1.35273816,
       1.38644763, 1.41994068, 1.4530983 , 1.48581003, 1.51797392,
       1.54949629, 1.58029159, 1.61028209, 1.63939764, 1.66757539,
       1.69475946, 1.72090066, 1.74595617, 1.76988923, 1.79266882,
       1.81426934, 1.83467027, 1.85385582, 1.87181462, 1.88853931,
       1.90402623, 1.91827496, 1.93128798, 1.94307026, 1.95362876,
       1.96297207, 1.97110986, 1.97805248, 1.98381037, 1.98839362,
       1.99181142, 1.99407146, 1.99517946, 1.99513854, 1.99394869,
       1.99160617, 1.98810294, 1.98342612, 1.97755741, 1.97047255,
       1.96214079, 1.95252443, 1.94157829, 1.92924928, 1.91547604,
       1.90018853, 1.8833077 , 1.86474528, 1.84440348, 1.82217485]) / 2

iter = np.arange(-500, -100, step=4)

plt.plot(iter, average_timeQ, '-', c='purple', label='LFA-NPG')
plt.plot(iter, average_timeT, ':', c='red', label='TRPO')
plt.plot(iter, average_timeP, '--', c='orange', label='PPO')
plt.fill_between(iter, average_timeT - tdevT, average_timeT + tdevT, alpha=0.2, color='red')
plt.fill_between(iter, average_timeQ - tdevQ, average_timeQ + tdevQ, alpha=0.2, color='purple')
plt.fill_between(iter, average_timeP - tdevQ, average_timeP + tdevP, alpha=0.2, color='orange')
plt.legend(loc='upper left')
plt.rcParams["font.family"] = "serif"
plt.grid()
plt.title('Processor Time over Reward', fontsize=25)
plt.xlabel('Reward', fontsize=20)
plt.ylabel('Time', fontsize=20)

plt.show()

print(str(repr(average_timeP)))